Day 1
-------
Oct. 6th 2016

So I'm trying to pick up React and the other modern web protocols/frameworks so that I can build my myCloud App.

The idea behind the myCloud app is to create an augmented reality space where professionals can meet each other. That is, once a professional hooks up his/her LinkedIn or Twitter accounts their profile is created. After the profile is created the person can choose to share their cloud and set their cloud radius. 

Once they are sharing their cloud, they will be able to see all other users within their cloud radius and be able to easily connect with them on social media. This is built so that people can avoid the annoying interaction interruption of having to pull out their phones during or at the end of conversations and add others to their professional network.

Business model:
	Basically approach conferences and recruiters and tell them: Hey here's this app for free please market it to the audience who is coming. They will be able to do xyz with it and we can build in benefit for you (specific skins for the app based on location, say) and also we can add things like links to the event schedule, etc. 

Basically make it a value prop. for the event. NOW go to the vendors attending the event and sell them targetted ad space based on the profiles of those individuals using the app (an also within your cloud, businesses within your cloud, etc. native advertising option).

Thus value for all 3:
	Conference holders: More advertising and allows them to pitch their conference is the most easily connected conference in the world
	Conference attendees: EASILY connect with the person you just sat next to or had a discussion with. FREE for you and doesn't use up much phone battery (KEY)
	Vendors: Extra advertising, especially in a HUGE conference with an overwhelming crowd helps them stand out and attract more visits to their booth. Also helps cultivate social following and can add items like users being able to click on and view certain details about the co.

OTHER market: Recruiters
	At job fairs/career fairs, etc. you speak to hundreds and thousands of students. Instead ofilling out Google Form why don't you have them instead just join your cloud (different version of app maybe?) and you will automatically get their email address, short bio and any documents they might choose to upload. 

	Lets them get the info just by going to a link and makes them look CUTTING EDGE.

Need sleek design for all this and robust, lightweight, platform agnostic functionality (in the form of a native web app) OR a hybrid app (for users who want to download the app).

What I need:
	Bussiness partner. I need someone who sees the potential in this idea to be able to assist in sales.
	Backend Developer: I need someone to handle and build an extremely robust and capable backend
	Designer: UX/UI will be KEY
	Front-end: Hand in hand with UX. No one will use/conferences won't buy into the idea unless the app is sexy.


THINK OF OTHER APPLICATIONS, SOMETHING LIKE THIS MUST HAVE OTHER APPS.

WHAT I LEARNT TODAY:
Learnt a lot about React.
https://blog.risingstack.com/the-react-way-getting-started-tutorial/

React is a way of thinking about development/a theory rather than JUST a dev. library (but it also comes with lot of tools). 
	Is the View in MVC framework

Uses "virtual DOM" for speed
	DOM manipulation is costly and resource intensive
	Make updates to "shadow DOM" and then only re-render those nodes that were changed (this doesn't happen by default, by default ALL nodes are re-rendered every change but is "easily" implementable (non-trivial)

Component Driven
	You won't ever see a FULL webpage with React.
	Breaks each element down into COMPONENTS
	Sort of like if you have a calculator
		Each button is component
		Then all buttons pieced together in larger piece
		Then larger pieces (screen + buttons) pieced together
		Finalls LARGE piece (Calc.)
	Uses the Atomic Web Design Model
		Atoms, Molecules, Organisms, Templates and Pages
		http://atomicdesign.bradfrost.com/chapter-2/#atomic-design-is-for-user-interfaces

ES6: ECMAScript 6 (ie Harmony)
	ECMAScript = Javascript (official name)

JSX: Javascript Extension Syntax
	Combine HTML w JS
	MUST compile to JS bc browsers today dont support it natively

EACH React Component:
	Has 
	-logic
	-internal state
	-event handlers
	-inline styles
	-everything you really need for proper displaying
	
	We can change the properties passed to each component at any time thus allowing us to code once deploy multiple times across the site

Some example code:
class userName extends React.Component {
	render() {
		return <div>name: {this.prop.name}</div>;
	}
}

class user extends React.Component {
	render() {
		return <div>
			<h1>City: {this.prop.user.city}</h1>
			<userName name = {this.prop.user.name} />
			</div>;
	}
}	

var user = {name : 'John', city: 'SFO'};
React.render(<user user={user}/>, mountNode);

//NOTE THIS IS EC6 -- will have to compile down to EC5 as of 10/16

To build with a node stack we will use npm and node packages (just require all of them and compile them into one single dependencies file with Webpack)
	Webpack is a bundler -> packages all dep./required files together and serves as one

FOLDER STRUCTURE
We want to use a folder structure that seperates React app from the client and server code
	-isomorphic app?
		app whose code can run on BOTH client and server
		SUPER fast

FLUX WITH REACT
https://blog.risingstack.com/the-react-js-way-flux-architecture-with-immutable-js/

Components as functions
	-each component can be thought of as a function in JS
		When function call w/ params you get an output value, in React Components you pass in values and in return get a rendered DOM elem.

Top Down Rendering (IMP!!!)
	Apps only make sense with data
		with React your app has a hierarchy that has a ROOT node where you pass the top level data as a param (if you notice in user snippet, the user class is the root node and it gets passed the JSON for the user)
	Data passed @ top/root then filters down (top down rendering)
	BUT how do you modify HIGHER level nodes when lower level changed?
		-Need something that stores local and global STATE and when state changes is re-calibrates the ROOT node and re-renders the tree
		-INTRODUCING FLUX (FB arch.)

Flux Arch
	-Flux is an app architecture for building UI
	-Unidiretional data flow concept
		You have Flux STORE which contains state of app as pure data
	-Emits events whenever it detects state change and lets React know what needs to be re-rendered.

Flux Arch diag:
	Views ----> Dispatcher ----> (callbacks) --> Stores ---> Emits events. Controls event handlers in React components ---> Views (and cycle repeats)


But there's still an issue!
	-The entire tree is still being re-rendered ROOT downwards every time Flux detects state delta
	-Solution?
		IMMUTABLE JS or FREEZER JS (sup. simpler)
		Immutable data cannot be changed once created alloweing advanced change detection tehcniques
		Can use === to check for obj. comparison (to see if obj has changed) as opposed to using DEEP comparison (checking EACH of obj. props and going down the rabbit hole)

In this way we can target and re-render ONLY nodes that require it.

-------------------------

Firebase
-DBAAS (DB as a service)
	Propogating realtime scalable DB as a service (owned by Google)
	Rel. CHEAP too
	USE it for the app

LOT OF COOL DEMOS
https://firebase.google.com/features/
https://todo-react-redux.firebaseapp.com/
https://react.rocks/example/todo-react-redux
https://github.com/firebase/reactfire/blob/master/examples/commentsBox/README.md
https://www.firebase.com/docs/web/libraries/react/examples.html
https://github.com/firebase/reactfire
https://www.pubnub.com/blog/2015-04-30-google-maps-geolocation-tracking-in-realtime-with-javascript/
https://www.airpair.com/firebase/posts/firebase-building-realtime-app
https://github.com/firebase/quickstart-js
https://firebase.google.com/docs/samples/
https://moquet.net/blog/realtime-geolocation-tracking-firebase/ (<---- RELEVANT!!!!!)
https://www.firebase.com/docs/
https://github.com/MattKetmo/firemap/tree/v1.0.0
https://www.airpair.com/angularjs/posts/build-a-real-time-hybrid-app-with-ionic-firebase
http://reapp.io/
https://www.fullstackreact.com/articles/react-tutorial-cloning-yelp/
http://blog.workshape.io/the-3ree-stack-react-redux-rethinkdb-express-js/
http://coenraets.org/blog/2015/03/real-time-trader-desktop-with-react-node-js-and-socket-io/
http://reactionic.github.io/

//MORE GENERAL GPS STACKOV
http://stackoverflow.com/questions/23112784/how-to-get-gps-coordinates-from-all-the-users-of-my-application

	










	





















